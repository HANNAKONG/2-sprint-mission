name: CD

on:
  push:
    branches:
      - release

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECR_REPOSITORY_URI: ${{ vars.ECR_REPOSITORY_URI }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
  ECS_TASK_DEFINITION: ${{ vars.ECS_TASK_DEFINITION }}

jobs:
  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (Public ECR)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Extract Git Commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPOSITORY_URI:latest -t $ECR_REPOSITORY_URI:${{ steps.vars.outputs.sha_short }} .

      - name: Push Docker Image
        run: |
          docker push $ECR_REPOSITORY_URI:latest
          docker push $ECR_REPOSITORY_URI:${{ steps.vars.outputs.sha_short }}

  update-ecs-service:
    name: Update ECS Service
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (ECS)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Current Task Definition
        id: get-task-def
        run: |
          aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION > task-def.json

      - name: Create New Task Definition Revision
        id: new-task-def
        run: |
          NEW_IMAGE="$ECR_REPOSITORY_URI:${{ needs.build-and-push.steps.vars.outputs.sha_short }}"
          CONTAINER_NAME=$(jq -r '.taskDefinition.containerDefinitions[0].name' task-def.json)
          UPDATED_TASK_DEF=$(jq --arg IMAGE "$NEW_IMAGE" \
            '.taskDefinition | {containerDefinitions: [.containerDefinitions[0] | .image = $IMAGE]}' \
            task-def.json)
          echo "$UPDATED_TASK_DEF" > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json > new-task-out.json
          NEW_TASK_DEF_ARN=$(jq -r '.taskDefinition.taskDefinitionArn' new-task-out.json)
          echo "task_def_arn=$NEW_TASK_DEF_ARN" >> $GITHUB_OUTPUT

      - name: Scale Down Existing Service (Stop Running Tasks)
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --desired-count 0
          sleep 20  # give time for old tasks to stop

      - name: Update ECS Service with New Task Definition
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --task-definition ${{ steps.new-task-def.outputs.task_def_arn }} \
            --desired-count 1
          
      

      



